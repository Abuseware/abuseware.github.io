<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Brainfork</title>
    <link>https://brainfork.org/posts/</link>
    <description>Recent content in Posts on Brainfork</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Sat, 16 Mar 2019 00:00:00 +0200</lastBuildDate><atom:link href="https://brainfork.org/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Własna stacja pogodowa — część czwarta i ostatnia</title>
      <link>https://brainfork.org/posts/20190316-weather-station-4/</link>
      <pubDate>Sat, 16 Mar 2019 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20190316-weather-station-4/</guid>
      <description>Wreszcie dotarły do mnie wszystkie elementy układanki i zacząłem składać czujki w zgrabną całość. Jeśli jeszcze raz ktoś mi powie, że rezystory o rozmiarach 0,6 x 0,3mm są fajne do ręcznego lutowania, to mu przylutuję…
Czujnik temperatury Jako podstawy czujki użyłem płytki prototypowej do której przymocowałem wszystkie elementy — Arduino Pro Mini oraz nRF24l01 za pomocą goldpinów które później skróciłem aby całość mogła dość nisko wejść w obudowę. W pobliżu pinu piątego umiejscowiłem DS18b20 oraz rezystor SMD 0603 4k7 podciągający linię sygnałową do stanu wysokiego.</description>
    </item>
    
    <item>
      <title>Własna stacja pogodowa - część trzecia</title>
      <link>https://brainfork.org/posts/20190216-weather-station-3/</link>
      <pubDate>Sat, 16 Feb 2019 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20190216-weather-station-3/</guid>
      <description>Aktualnie pracuję nad przekształceniem całego projektu w system wewnętrznych czujników które mogłyby być rozsiane w różnych miejscach domu. Koncept oparłem o układy nRF24L01 które są tanie, posiadając przy tym zadowalające parametry i nie wymuszają podłączania każdego czujnika do sieci Wi-Fi, co mogłoby spowodować spadek wydajności całej sieci, szczególnie przy większej liczbie mocno oddalonych od siebie czujek. Dodałem także obsługę układów Microchip MCP9700A, które są o wiele tańsze od Maximowych DS18B20, a przy odpowiedniej kalibracji i multisamplingu dają bardzo dobre rezultaty.</description>
    </item>
    
    <item>
      <title>Komu grę na NESa?</title>
      <link>https://brainfork.org/posts/20181230-nes/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:01 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20181230-nes/</guid>
      <description>Własny system operacyjny na x86? A na co to komu, trzeba myśleć przyszłościowo, napiszmy “grę” na NES, bardziej znanego u nas jako Pegasus.
Całość, choć rozpoczęta w Assembly (tym razem dla MOS 6502), szybko została przepisana na C. Na szczęście istnieje całkiem przyjemny kompilator napisany z myślą o starszych urządzeniach o nazwie CC65, choć do GCC czy Clang się nie umywa - to pamiętając o pewnych niestandardowych zachowaniach oraz tym, że niektóre operacje generują kod przy którym obsługa operacji matematycznych na “bignumach” na pecetach wygląda żałośnie, da się tak programować - całość powiązana jest dość mocno z ograniczeniami samego procesora.</description>
    </item>
    
    <item>
      <title>OS Dev</title>
      <link>https://brainfork.org/posts/20181230-osdev/</link>
      <pubDate>Sun, 30 Dec 2018 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20181230-osdev/</guid>
      <description>Kolejny dziwny projekt, jakich wiele…
Nigdy o nim tutaj nie wspominałem, a trwa już dobre 5 lat, więc może warto by było zacząć od odrobiny wykopalisk historycznych. W 2014r. wpadłem na pomysł, żeby w ramach podszkolenia się w Assembly dla procesorów x86 napisać prosty bootloader. Oryginalnie powiązany z moim “panic button” mając na celu nadpisania bootloadera systemu z szyfrowanym dyskiem (LUKS o ile mnie pamięć nie myli), startował PC w trybie 16bit i wyświetlał prostego ASCII-arta.</description>
    </item>
    
    <item>
      <title>Własna stacja pogodowa — changelog</title>
      <link>https://brainfork.org/posts/20180304-weather-station-2/</link>
      <pubDate>Sun, 04 Mar 2018 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20180304-weather-station-2/</guid>
      <description>W związku z kilkoma błędami w wykonaniu które wyszły na jaw po publikacji ostatniego posta chciałbym zamieścić krótką erratę, jak i listę zmian które zaszły.
Od strony sprzętowej największą pomyłką okazało się zamknięcie czujnika w metalowej puszce — o ile w nocy spełnia swoje zadanie, choć jak zrozumiałem po dyskusjach z kilkoma osobami które mają trochę większe doświadczenie w temacie zupełnie niepotrzebnie, o tyle w momentach wystawienia na bezpośrednie działanie promieni słonecznych działa ona lepiej niż nie jedna szklarnia i przekłamuje pomiary o dobre kilkanaście stopni.</description>
    </item>
    
    <item>
      <title>Początki z Arduino, czyli własna stacja pogodowa</title>
      <link>https://brainfork.org/posts/20180228-weather-station/</link>
      <pubDate>Wed, 28 Feb 2018 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20180228-weather-station/</guid>
      <description>Chciałbym Wam przedstawić mój nowy projekt zrobiony z okazji zakupu pierwszego Arduino, a mianowicie prostą do bólu stację logującą temperaturę z czujnika DS18b20 do pliku oraz dalszą możliwość obróbki takiego pliku w celu ciekawej reprezentacji.
Stacja składa się z:
 Arduino Pro Mini, lub dowolnej innej wersji — np. chińskiej DS18b20 — właściwy termometr DS1307 — RTC używany do dokładniejszego pomiaru czasu Dowolna karta SD/microSD  Szczegółów wykonania urządzenia opisywać nie będę, nie jest ono zbyt skomplikowane.</description>
    </item>
    
    <item>
      <title>Pong</title>
      <link>https://brainfork.org/posts/20170404-pong/</link>
      <pubDate>Tue, 04 Apr 2017 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20170404-pong/</guid>
      <description>Dla “potomnych” wrzucam zaległe nagrania z projektu tworzonego około rok temu.
Prototyp   Wersja końcowa   Jak widać nic zjawiskowego, ot kolejny klon ponga z pięknym ghostingiem spowodowanym świetnej jakości ekranem starej Nokii.</description>
    </item>
    
    <item>
      <title>Stare nowe gry…</title>
      <link>https://brainfork.org/posts/20160729-gry/</link>
      <pubDate>Fri, 29 Jul 2016 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20160729-gry/</guid>
      <description>Modne ostatnio jest tworzenie remake’ów starych gier. Fani, napędzani nostalgią chętnie wyciągną portfel i zapłacą jeszcze raz, by pograć w to samo, ot dla wspominek i obrazu w HD. Pytanie tylko, czy na pewno przeniesienie gry na współczesną platformę i narysowanie tekstur/sprite’ów od nowa jest dla takiej gry dobre?
Twórcy remake’a mogą popsuć coś w grze, wyciąć lub dodać fragmenty których oryginalnie nie było… dorzucić poprawkę która znacznie wpłynie na rozgrywkę.</description>
    </item>
    
    <item>
      <title>Eleaf iStick TC60W kit — test</title>
      <link>https://brainfork.org/posts/20160208-eleaf-istick/</link>
      <pubDate>Mon, 08 Feb 2016 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20160208-eleaf-istick/</guid>
      <description>Niedawno zdecydowałem się wymienić mojego Provog Venture 2 na coś nowszego. Wybór padł na zestaw firmy Eleaf — mod iStick TC60W w wersji Brushed Silver wraz z atomizerem Lemo 2.
W skład zestawu wchodzi mod wraz z wymiennymi panelami bocznymi (u mnie były to panele czarne, dostępne są inne wersje kolorystyczne), atomizer, trzy zespoły grzewcze (nichromowy 0.3Ω, niklowy 0.15Ω oraz tytanowy 0.5Ω), zapasowe uszczelki oraz wielojęzyczne instrukcje obsługi, niestety bez języka polskiego.</description>
    </item>
    
    <item>
      <title>Tworzymy własny liquid do e-papierosa</title>
      <link>https://brainfork.org/posts/20151214-liquid/</link>
      <pubDate>Mon, 14 Dec 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20151214-liquid/</guid>
      <description>Dlaczego warto przesiąść się z gotowych liquidów sklepowych na własnoręcznie tworzone? Powodów może być wiele, od możliwości niemal nieograniczonego wyboru aromatu i mocy, po cenę produktu.
Cena Typowy liquid sklepowy to koszt od 10 do 30zł za 10ml. Nie jest to może zaporowe, ale dla mnie jednym z powodów przesiadki na elektronicznego papierosa była kwestia ograniczenia wydatków z tym związanych. Sklepowe liquidy i tak wychodzą taniej niż klasyczne papierosy, ale… można oszczędzić jeszcze bardziej, nic nie tracąc.</description>
    </item>
    
    <item>
      <title>USA, NSA i CISA — małe wielkie zmiany w internecie i jego prywatności…</title>
      <link>https://brainfork.org/posts/20151112-prywatnosc/</link>
      <pubDate>Thu, 12 Nov 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20151112-prywatnosc/</guid>
      <description>27 października 2015 w senacie USA poparta została większością głosów propozycja ustawy Cybersecurity Information Sharing Act (CISA). W okół niej jeszcze przed głosowaniem było wiele szumu, jak i protestów.
A dlaczego?
CISA, cytując za szkicem tejże ustawy ma na celu “improve cybersecurity in the United States through enhanced sharing of information about cybersecurity threats, and for other purposes”, czyli tłumacząc — poprawić poziom cyberbezpieczeństwa na terenie USA poprzez ulepszony przepływ informacji o zagrożeniach, oraz w innych celach.</description>
    </item>
    
    <item>
      <title>PROVOG Venture 2 — Wrażenia</title>
      <link>https://brainfork.org/posts/20150831-provog-venture-2/</link>
      <pubDate>Mon, 31 Aug 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150831-provog-venture-2/</guid>
      <description>Tekst jest aktualizacją do PROVOG Venture 2 — Test.
Pół roku później… W trakcie ponad półrocznego użytkowania wystąpiły:
 Częściowe starcie posrebrzenia z boków dołu papierosa Delikatne odbarwienia niebieskiego lakieru Przetarcia w lakierze pokrywającym górną część tulei Luzy na połączeniach tulei z jej gwintami oraz pomiędzy przyłączem baterii i jej korpusem Przepalenie 4 (włącznie z oryginalnym) zespołów grzewczych  Oprócz zespołu grzewczego żadna inna część nie była wymieniana, tak więc żywotność urządzenia jest bardzo dobra — szczególnie, że e-papierosa noszę w kieszeni.</description>
    </item>
    
    <item>
      <title>Jak (nie) zostać programistą…</title>
      <link>https://brainfork.org/posts/20150806-programista/</link>
      <pubDate>Thu, 06 Aug 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150806-programista/</guid>
      <description>Opiszę Wam jak to (nie) zostałem programistą, a na koniec udzielę też kilku rad w tym temacie.
Mając lat siedem dostałem komputer… Ot, stary używany złom którego używałem głównie do grania w to co gimby nie znają. Internetu za bardzo nie było, a jak się już pojawił to kosztował tyle, że opłacało się go używać jedynie w porach, w których już dawno spałem. W międzyczasie ojciec uraczył mnie prezentem w postaci pierwszego numeru czasopisma o podstawach programowania wydawanym przez istniejące do dziś wydawnictwo szczycące się różnego rodzaju zestawami do samodzielnego montażu i częściami do nich, a także książkami powiązanymi tematycznie i/lub gatunkowo.</description>
    </item>
    
    <item>
      <title>FreeBSD na desktopie — warto?</title>
      <link>https://brainfork.org/posts/20150709-freebsd-desktop/</link>
      <pubDate>Thu, 09 Jul 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150709-freebsd-desktop/</guid>
      <description>Post nie pretenduje do miana poradnika, ani żadnego know how, zawarłem tu jedynie moje spostrzeżenia odnośnie rozwoju tego systemu przez ostatnie kilka lat.
Już kilka razy systemy z rodziny BSD przewinęły się po dyskach moich serwerów, desktopów i laptopów. O ile sytuacja na serwerach od zawsze wypadała o niebo lepiej od dystrybucji GNU/Linux, o tyle na reszcie sprzętu zawsze pojawiały się problemy, często przypominające Linuksy w czasach tak zamierzchłych jak wersje 2.</description>
    </item>
    
    <item>
      <title>Apple Magic Mouse — cena za logo, czy jakość? (&#43; aktualizacja)</title>
      <link>https://brainfork.org/posts/20150301-magic-mouse/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150301-magic-mouse/</guid>
      <description>Nigdy nie byłem fanbojem marki Apple i do większości jej produktów podchodziłem z daleko idącą ostrożnością.
Główną przyczyną było doświadczenie z nieco starszymi modelami iMac — pierwsza seria z systemami OS X — oraz osprzętem do nich. Komputery z którymi miałem styczność były ładnie zaprojektowane, ale ograniczone zarówno od strony sprzętowej, jak i systemowej, a parametry jakie oferowały miały się nijak do porównywalnych cenowo pecetów. Do dzisiaj jednym z wspomnień które mnie odrzuca jest mysz Mighty Mouse (nie mylić z Magic Mouse), która syfiła się jak diabli, a do wyczyszczenia niezbędne było rozerwanie jej na części — tak, rozerwanie, nie jakieś rozkręcanie.</description>
    </item>
    
    <item>
      <title>PROVOG Venture 2 — Test</title>
      <link>https://brainfork.org/posts/20150112-provog-venture-2/</link>
      <pubDate>Mon, 12 Jan 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150112-provog-venture-2/</guid>
      <description>Po ponad rocznym używaniu e-papierosa marki P1 (Blister) i licznych problemach oraz stałym spadkiem jakości części wymiennych zdecydowałem się na zakup nowego, tym razem nie “polskiej” produkcji (Made in china aż biło po oczach). Poniższy test będzie więc również porównaniem obu produktów.
Unboxing Venture 2, w wersji Azure zakupiłem za 119 PLN w jednym z punktów marki eSmokingWorld. Opakowany został ładnym pudełkiem z przezroczystą “szybką” pozwalającą ujrzeć nasz egzemplarz przed zakupem.</description>
    </item>
    
    <item>
      <title>LCD HD47780 — Pierwsze testy</title>
      <link>https://brainfork.org/posts/20150104-hd47780/</link>
      <pubDate>Sun, 04 Jan 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150104-hd47780/</guid>
      <description>Z drobnym poślizgiem spowodowanym świętami dotarł do mnie wyświetlacz LCD 2x16 ze sterownikiem HD47780 — popularny i dość tani, a po dolutowaniu goldpinów pięknie wpasowujący się w chlebodeskę.
Zalety i wady Do niewątpliwych zalet tego wyświetlacza należy zaliczyć prostotę komunikacji — wystarczy od 6 do 11 pinów przy standardowym montażu, bądź dwa przy wykorzystaniu multipleksera portów na I²C. Komunikacja odbywa się poprzez 4 lub 8 bitową szynę danych, plus 2–3 linie kontrolne.</description>
    </item>
    
    <item>
      <title>Retarded Blinkenlights</title>
      <link>https://brainfork.org/posts/20141230-blinkenlight/</link>
      <pubDate>Tue, 30 Dec 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20141230-blinkenlight/</guid>
      <description>Jeden z pierwszych moich projektów, jednak staram się by pomimo mojej niewiedzy wyglądał tak, jak powinien i działał na tyle, by nie stanowić alternatywy dla materiałów wybuchowych.
Projekt 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93  #include &amp;lt;avr/io.</description>
    </item>
    
    <item>
      <title>Spotkanie z Atmel ATmega8 — pierwsze wrażenia</title>
      <link>https://brainfork.org/posts/20141218-atmega/</link>
      <pubDate>Thu, 18 Dec 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20141218-atmega/</guid>
      <description>TL;DR — Bawię się ATmegą8a, przyszedłem pomarudzić.
Od zawsze byłem osobą ciekawską, może o tyle jest to zaletą, że bardziej niż życie sąsiada interesowało mnie to jak działa sprzęt (w szczególności elektroniczny) który mnie otacza. Przez wiele lat na zainteresowaniu i studiowaniu bebechów — często ze skutkiem fatalnym dla samych urządzeń — przygoda z tym tematem się kończyła, zanikając pod presją kurczącego się wolnego czasu, jak i zużywaniem go na naukę programowania i administracji systemami uniksowatymi.</description>
    </item>
    
    <item>
      <title>O SystemD słów kilka…</title>
      <link>https://brainfork.org/posts/20141119-systemd/</link>
      <pubDate>Wed, 19 Nov 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20141119-systemd/</guid>
      <description>SystemD, pomimo wielu zalet spotyka się ze znaczym oporem wśród developerów jak i użytkowników wielu dystrybucji GNU/Linux. Problem jest na tyle poważny, że developerzy zaczynają masowo rezygnować z współtworzenia dystrybucji, choć moim zdaniem te reakcje są sporo przesadzone, a zmiana wychodzi jedynie wszystkim na dobre.
Jedną z najczęściej wymienianych wad jest brak podążania za nieformalnym standardem KISS. Według mnie jest to bzdurą, gdyż pomimo swojej złożoności za każdą jego funkcję odpowiadają osobne demony, które jednak są od początku przystosowane do wzajemnej współpracy.</description>
    </item>
    
    <item>
      <title>Wiele systemów na jednej partycji, czyli sztuczki z BTRFS</title>
      <link>https://brainfork.org/posts/20141005-btrfs/</link>
      <pubDate>Sun, 05 Oct 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20141005-btrfs/</guid>
      <description>Jedną z wielu ciekawostek systemu BTRFS jest obsługa “podwoluminów”, które mogą być używane w sposób całkowicie niezależny od reszty systemu plików — mechanizm przypomina bardzo typowy podział dysku na partycje, zdejmując jednak z użytkownika problematykę związaną ze złym rozłożeniem rozmiaru poszczególnych partycji i uciążliwą, często niemożliwą do wykonania podczas działania systemu modyfikacją układu.
Idąc dalej możemy nawet zrezygnować z tworzenia układu partycji i stworzyć dysk który jest w pełni zagospodarowany za pomocą BTRFS.</description>
    </item>
    
    <item>
      <title>Naprawa przepalonego zespołu grzewczego P1</title>
      <link>https://brainfork.org/posts/20140822-grzalka-p1/</link>
      <pubDate>Fri, 22 Aug 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20140822-grzalka-p1/</guid>
      <description>Produkty marki P1 cechują się niską ceną oraz… wysoką awaryjnością. Patrząc na produkt który jest tematem niniejszego artykułu i porównując go z alternatywami oferowanymi przez resztę firm można zauważyć, że ograniczenie ceny elementu było kluczowe przy jego projektowaniu. Z tego też względu “waciki” zostały zmniejszone do kikutów długości około centymetra a cały zespół grzewczy jest zamontowany pod zbiorniczkiem liquidu. Rozwiązanie ciekawe i zmniejsza prawdopodobieństwo spalenia grzałki, jednak jakość wykonania elementu i tak sprawia, że nie przetrwał on u mnie dłużej niż miesiąc (producent nie obiecywał dłuższego czasu pracy).</description>
    </item>
    
    <item>
      <title>TINC — Alternatywa dla OpenVPN?</title>
      <link>https://brainfork.org/posts/20130405-tinc/</link>
      <pubDate>Fri, 05 Apr 2013 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20130405-tinc/</guid>
      <description>Od dłuższego czasu interesował mnie projekt o nazwie TINC, jednak nigdy nie miałem wystarczającej ilości czasu, by dokładniej się mu przyjrzeć. Jest toprojekt implementujący VPN, potrafiący pracować zarówno jako mostek pomiędzy różnymi intranetami, jak i jako prosty punkt dostępowy do sieci wewnętrznej.
Różnice pomiędzy projektami Na początek warto wspomnieć, że TINC nie jest tak rozbudowany jak OpenVPN. Nie posiada udawanego serwera DHCP ani żadnej funkcjonalności ingerującej w konfigurację adresów IP i tym podobnych.</description>
    </item>
    
    <item>
      <title>Zmienna środowiskowa LD_PRELOAD</title>
      <link>https://brainfork.org/posts/20130312-zmienna-srodowiskowa-ld-preload/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20130312-zmienna-srodowiskowa-ld-preload/</guid>
      <description>Niewielu początkujących programistów i administratorów wie o tej zmiennej, a warto przyjrzeć się bliżej jej możliwościom, które wprowadzają tyle samo dobrego, co i złego.
Co to jest? Zmienna środowiskowa LD_PRELOAD, oraz jej plikowy odpowiednik /etc/ld.so.preload pozwalają na załadowanie przez glibc DOWOLNEJ dynamicznej biblioteki zewnętrznej w ciało wykonywanego programu przed jego wykonaniem. Odpowiednie użycie tego mechanizmu może pozwolić administratorowi serwera na zabezpieczenie dziurawego programu bez modyfikacji jego kodu (co niekiedy jest jedyną opcją).</description>
    </item>
    
    <item>
      <title>Garbage Collector dla C i C&#43;&#43;</title>
      <link>https://brainfork.org/posts/20130225-garbage-collector/</link>
      <pubDate>Mon, 25 Feb 2013 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20130225-garbage-collector/</guid>
      <description>Prostota C Język C, z założenia skupiający się na prostocie w swej budowie obarcza programistę sporą ilością pracy i koniecznością dbania o detale, o których istnieniu możemy zapomnieć pisząc w nowocześniejszych językach.
Takie podejście pozwala lepiej zrozumieć maszyny i ich tendencję do bycia głupim, niewykwalifikowanym, choć dokładnym pracownikiem. O ile pozwala to, na lepsze wykorzystanie zasobów maszyny i dokładniejszą optymalizację, to trudno nazwać to zadanie wygodnym.
Kolekcjonowanie odpadków Programiści języków takich jak C#, Java czy Python o alokację i zwalnianie pamięci troszczyć się nie muszą — tym zadaniem obarczone jest środowisko uruchomieniowe, które dba o sprzątanie całego bajzlu który zostawił po sobie programista, dlaczego więc nie wykorzystać podobnego mechanizmu w C?</description>
    </item>
    
    <item>
      <title>Rodem z gier komputerowych</title>
      <link>https://brainfork.org/posts/20130225-rodem-z-gier-komputerowych/</link>
      <pubDate>Mon, 25 Feb 2013 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20130225-rodem-z-gier-komputerowych/</guid>
      <description>Na filmach tak elegancko to wygląda, wchodzi człowiek ubrany w skórę, podłącza kilka kabelków do klawiatury i drzwi otwarte. Samo złamanie kodu w teorii nie jest specjalnie trudne. Więc może jest część prawdy w szybkim otwieraniu drzwi?
Klawiatura przeglądana sprzętowo to raczej przeżytek, ale można fajnie pokazać pewne rzeczy. Liczniki cyfrowe (tu: mod4) pracują wpisując wszystkie możliwe kombinacje na wejścia adresowe komutatorów (Demultiplekser, Multiplekser), przeglądających kolejne przyciski (przecięcia wyjść/wejść). Przyciski na przecięciu wyjść demultipleksera i wejść multipleksera wduszone zwierają je ze sobą, multiplekser ustawia na wyjściu poziom niski, do rejestru wpisywana jest wartość liczników.</description>
    </item>
    
  </channel>
</rss>
