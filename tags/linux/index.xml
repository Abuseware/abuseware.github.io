<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>linux on Brainfork</title>
    <link>https://brainfork.org/tags/linux/</link>
    <description>Recent content in linux on Brainfork</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>pl</language>
    <lastBuildDate>Sun, 01 Mar 2015 00:00:00 +0200</lastBuildDate><atom:link href="https://brainfork.org/tags/linux/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apple Magic Mouse — cena za logo, czy jakość? (&#43; aktualizacja)</title>
      <link>https://brainfork.org/posts/20150301-magic-mouse/</link>
      <pubDate>Sun, 01 Mar 2015 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20150301-magic-mouse/</guid>
      <description>Nigdy nie byłem fanbojem marki Apple i do większości jej produktów podchodziłem z daleko idącą ostrożnością.
Główną przyczyną było doświadczenie z nieco starszymi modelami iMac — pierwsza seria z systemami OS X — oraz osprzętem do nich. Komputery z którymi miałem styczność były ładnie zaprojektowane, ale ograniczone zarówno od strony sprzętowej, jak i systemowej, a parametry jakie oferowały miały się nijak do porównywalnych cenowo pecetów. Do dzisiaj jednym z wspomnień które mnie odrzuca jest mysz Mighty Mouse (nie mylić z Magic Mouse), która syfiła się jak diabli, a do wyczyszczenia niezbędne było rozerwanie jej na części — tak, rozerwanie, nie jakieś rozkręcanie.</description>
    </item>
    
    <item>
      <title>O SystemD słów kilka…</title>
      <link>https://brainfork.org/posts/20141119-systemd/</link>
      <pubDate>Wed, 19 Nov 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20141119-systemd/</guid>
      <description>SystemD, pomimo wielu zalet spotyka się ze znaczym oporem wśród developerów jak i użytkowników wielu dystrybucji GNU/Linux. Problem jest na tyle poważny, że developerzy zaczynają masowo rezygnować z współtworzenia dystrybucji, choć moim zdaniem te reakcje są sporo przesadzone, a zmiana wychodzi jedynie wszystkim na dobre.
Jedną z najczęściej wymienianych wad jest brak podążania za nieformalnym standardem KISS. Według mnie jest to bzdurą, gdyż pomimo swojej złożoności za każdą jego funkcję odpowiadają osobne demony, które jednak są od początku przystosowane do wzajemnej współpracy.</description>
    </item>
    
    <item>
      <title>Wiele systemów na jednej partycji, czyli sztuczki z BTRFS</title>
      <link>https://brainfork.org/posts/20141005-btrfs/</link>
      <pubDate>Sun, 05 Oct 2014 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20141005-btrfs/</guid>
      <description>Jedną z wielu ciekawostek systemu BTRFS jest obsługa “podwoluminów”, które mogą być używane w sposób całkowicie niezależny od reszty systemu plików — mechanizm przypomina bardzo typowy podział dysku na partycje, zdejmując jednak z użytkownika problematykę związaną ze złym rozłożeniem rozmiaru poszczególnych partycji i uciążliwą, często niemożliwą do wykonania podczas działania systemu modyfikacją układu.
Idąc dalej możemy nawet zrezygnować z tworzenia układu partycji i stworzyć dysk który jest w pełni zagospodarowany za pomocą BTRFS.</description>
    </item>
    
    <item>
      <title>Zmienna środowiskowa LD_PRELOAD</title>
      <link>https://brainfork.org/posts/20130312-zmienna-srodowiskowa-ld-preload/</link>
      <pubDate>Tue, 12 Mar 2013 00:00:00 +0200</pubDate>
      
      <guid>https://brainfork.org/posts/20130312-zmienna-srodowiskowa-ld-preload/</guid>
      <description>Niewielu początkujących programistów i administratorów wie o tej zmiennej, a warto przyjrzeć się bliżej jej możliwościom, które wprowadzają tyle samo dobrego, co i złego.
Co to jest? Zmienna środowiskowa LD_PRELOAD, oraz jej plikowy odpowiednik /etc/ld.so.preload pozwalają na załadowanie przez glibc DOWOLNEJ dynamicznej biblioteki zewnętrznej w ciało wykonywanego programu przed jego wykonaniem. Odpowiednie użycie tego mechanizmu może pozwolić administratorowi serwera na zabezpieczenie dziurawego programu bez modyfikacji jego kodu (co niekiedy jest jedyną opcją).</description>
    </item>
    
  </channel>
</rss>
